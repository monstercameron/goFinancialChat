package chat

import "goFinancialChat/database"

templ ChatPageWithHistory(conversations []database.Conversation) {
    <!DOCTYPE html>
    <html lang="en" class="h-full">
        <head>
            <meta charset="UTF-8" />
            <meta name="viewport" content="width=device-width, initial-scale=1.0" />
            <title>Financial Chat</title>
            <script src="https://unpkg.com/htmx.org@1.9.10"></script>
            <script src="https://cdn.tailwindcss.com"></script>
        </head>
        <body class="h-full">
            <div class="flex h-full">
                <!-- Chat Window -->
                <div class="w-1/2 flex flex-col h-full border-r">
                    <div id="chat-messages" class="flex-grow overflow-y-auto p-4 space-y-4">
                        <!-- Render conversation history -->
                        for _, conv := range conversations {
                            @ChatBubble(conv.UserMessage, true)
                            @ChatBubble(conv.AIResponse, false)
                        }
                    </div>
                    <div class="p-4 border-t">
                        <form hx-post="/api/chat" hx-target="#chat-messages" hx-swap="beforeend" class="flex">
                            <input type="text" name="message" placeholder="Type your message..." 
                                   class="flex-grow px-4 py-2 border rounded-l-lg focus:outline-none focus:ring-2 focus:ring-blue-500" />
                            <button type="submit" 
                                    class="px-4 py-2 bg-blue-500 text-white rounded-r-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500">
                                Send
                            </button>
                        </form>
                    </div>
                </div>
                
                <!-- Output Window -->
                <div class="w-1/2 p-4 bg-gray-100 overflow-y-auto">
                    <h2 class="text-xl font-bold mb-4">Output</h2>
                    <div id="output-content">
                        <!-- Output content will be dynamically inserted here -->
                    </div>
                </div>
            </div>
            
            <script>
                htmx.on("htmx:afterSwap", function(event) {
                    if (event.detail.target.id === "chat-messages") {
                        event.detail.target.scrollTop = event.detail.target.scrollHeight;
                    }
                });
            </script>
        </body>
    </html>
}

templ ChatBubble(message string, isUser bool) {
    <div class={ "flex", Ternary(isUser, "justify-end", "justify-start") }>
        <div class={
            "max-w-xs px-4 py-2 rounded-lg",
            Ternary(isUser, "bg-blue-500 text-white", "bg-gray-300 text-black")
        }>
            { message }
        </div>
    </div>
}

templ ChatBubbles(userMessage string, aiResponse string) {
    @ChatBubble(userMessage, true)
    @ChatBubble(aiResponse, false)
}